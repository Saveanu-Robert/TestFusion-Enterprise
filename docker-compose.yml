# Docker Compose for TestFusion-Enterprise
# Provides orchestrated testing environment with external services

version: '3.8'

services:
  # Main test runner
  testfusion:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./test-results:/app/test-results
      - ./playwright-report:/app/playwright-report
      - ./enterprise-reports:/app/enterprise-reports
    environment:
      - NODE_ENV=test
      - CI=true
      - TEST_ENV=docker
    networks:
      - testfusion-network
    depends_on:
      - selenium-hub
      - selenium-chrome
      
  # Selenium Grid Hub
  selenium-hub:
    image: selenium/hub:4.15.0
    container_name: selenium-hub
    ports:
      - "4444:4444"
      - "4443:4443"
      - "4442:4442"
    environment:
      - GRID_MAX_SESSION=4
      - GRID_BROWSER_TIMEOUT=300
      - GRID_TIMEOUT=300
    networks:
      - testfusion-network
      
  # Chrome Node
  selenium-chrome:
    image: selenium/node-chrome:4.15.0
    shm_size: 2gb
    environment:
      - HUB_HOST=selenium-hub
      - NODE_MAX_INSTANCES=2
      - NODE_MAX_SESSION=2
    depends_on:
      - selenium-hub
    networks:
      - testfusion-network
      
  # Firefox Node (optional)
  selenium-firefox:
    image: selenium/node-firefox:4.15.0
    shm_size: 2gb
    environment:
      - HUB_HOST=selenium-hub
      - NODE_MAX_INSTANCES=2
      - NODE_MAX_SESSION=2
    depends_on:
      - selenium-hub
    networks:
      - testfusion-network
    profiles:
      - full-browsers
      
  # Test database (for data-driven tests)
  test-db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=testfusion
      - POSTGRES_USER=testuser
      - POSTGRES_PASSWORD=testpass
    ports:
      - "5432:5432"
    volumes:
      - test-db-data:/var/lib/postgresql/data
    networks:
      - testfusion-network
    profiles:
      - with-database
      
  # Mock API server (for contract testing)
  mock-api:
    image: wiremock/wiremock:2.35.0
    ports:
      - "8080:8080"
    volumes:
      - ./tests/mocks:/home/wiremock
    command: ["--global-response-templating", "--verbose"]
    networks:
      - testfusion-network
    profiles:
      - mock-services
      
  # Monitoring and observability
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - testfusion-network
    profiles:
      - monitoring
      
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - testfusion-network
    profiles:
      - monitoring

networks:
  testfusion-network:
    driver: bridge

volumes:
  test-db-data:
  grafana-data:
