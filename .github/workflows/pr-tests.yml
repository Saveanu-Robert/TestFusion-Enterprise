name: PR Tests

on:
  pull_request:
    branches: [ main, develop ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '.gitignore'
      - 'LICENSE'

# Add explicit permissions for the workflow
permissions:
  contents: read
  actions: read
  checks: write
  pull-requests: write

env:
  # This is the only secret needed - the encryption key for decrypting .env values
  ENV_ENCRYPTION_KEY: ${{ secrets.ENV_ENCRYPTION_KEY }}

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        test-type: [api, web-local, web-grid]
        include:
          - test-type: api
            test-command: npm run test:api
          - test-type: web-local
            test-command: npm run test:web
          - test-type: web-grid
            test-command: npm run test:web:grid

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Decrypt and load environment variables
      run: |
        # Process .env file to decrypt sensitive values and export all variables
        node scripts/env-crypto.js process-env .env > .env.decrypted
        
        # Export all environment variables for subsequent steps
        while IFS='=' read -r key value; do
          # Skip comments and empty lines
          if [[ ! "$key" =~ ^[[:space:]]*# ]] && [[ -n "$key" ]] && [[ "$key" =~ ^[A-Za-z_][A-Za-z0-9_]*$ ]]; then
            # Remove quotes if present and export
            value=$(echo "$value" | sed 's/^"//;s/"$//')
            echo "$key=$value" >> $GITHUB_ENV
            echo "::add-mask::$value"  # Mask sensitive values in logs
          fi
        done < .env.decrypted
        
        # Clean up temporary file
        rm -f .env.decrypted

    - name: Install Playwright Browsers (for web tests)
      if: matrix.test-type != 'api'
      run: npx playwright install --with-deps

    - name: Setup Selenium Grid (for grid tests)
      if: matrix.test-type == 'web-grid'
      run: |
        # Start Selenium Grid in the background
        docker run -d -p 4444:4444 -p 7900:7900 --shm-size=2g selenium/standalone-chrome:latest
        
        # Wait for grid to be ready
        timeout 60 bash -c 'until curl -sSf http://localhost:4444/wd/hub/status; do sleep 2; done'

    - name: Run tests
      run: ${{ matrix.test-command }}

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results-${{ matrix.test-type }}
        path: |
          playwright-report/
          test-results/
        retention-days: 7

    - name: Upload Playwright Report
      if: always() && matrix.test-type != 'api'
      uses: actions/upload-artifact@v4
      with:
        name: playwright-report-${{ matrix.test-type }}
        path: playwright-report/
        retention-days: 30

    - name: Create PR test summary
      if: always()
      run: |
        # Determine status with proper emoji
        if [[ "${{ job.status }}" == "success" ]]; then
          STATUS="✅ Passed"
          STATUS_EMOJI="🎉"
        elif [[ "${{ job.status }}" == "failure" ]]; then
          STATUS="❌ Failed"
          STATUS_EMOJI="💥"
        elif [[ "${{ job.status }}" == "cancelled" ]]; then
          STATUS="🚫 Cancelled"
          STATUS_EMOJI="⏹️"
        else
          STATUS="⚠️ ${{ job.status }}"
          STATUS_EMOJI="❓"
        fi
        
        # Create PR test summary
        echo "## ${STATUS_EMOJI} PR Test Results - ${{ matrix.test-type }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "| Field | Value |" >> $GITHUB_STEP_SUMMARY
        echo "|-------|-------|" >> $GITHUB_STEP_SUMMARY
        echo "| **Test Type** | \`${{ matrix.test-type }}\` |" >> $GITHUB_STEP_SUMMARY
        echo "| **Status** | ${STATUS} |" >> $GITHUB_STEP_SUMMARY
        echo "| **PR Number** | \`#${{ github.event.number }}\` |" >> $GITHUB_STEP_SUMMARY
        echo "| **Branch** | \`${{ github.head_ref }}\` |" >> $GITHUB_STEP_SUMMARY
        echo "| **Commit** | \`${{ github.sha }}\` |" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        # Add test-specific information
        if [[ "${{ matrix.test-type }}" == "api" ]]; then
          echo "### 🔌 API Tests Executed" >> $GITHUB_STEP_SUMMARY
          echo "- JSONPlaceholder API endpoints" >> $GITHUB_STEP_SUMMARY
          echo "- CRUD operations validation" >> $GITHUB_STEP_SUMMARY
          echo "- Data integrity checks" >> $GITHUB_STEP_SUMMARY
        elif [[ "${{ matrix.test-type }}" == "web-local" ]]; then
          echo "### 🌐 Web Tests Executed (Local)" >> $GITHUB_STEP_SUMMARY
          echo "- Cross-browser compatibility" >> $GITHUB_STEP_SUMMARY
          echo "- Page navigation and loading" >> $GITHUB_STEP_SUMMARY
          echo "- Accessibility validation" >> $GITHUB_STEP_SUMMARY
        elif [[ "${{ matrix.test-type }}" == "web-grid" ]]; then
          echo "### 🌐 Web Tests Executed (Grid)" >> $GITHUB_STEP_SUMMARY
          echo "- Selenium Grid execution" >> $GITHUB_STEP_SUMMARY
          echo "- Distributed testing" >> $GITHUB_STEP_SUMMARY
          echo "- Browser compatibility" >> $GITHUB_STEP_SUMMARY
        fi
        echo "" >> $GITHUB_STEP_SUMMARY
